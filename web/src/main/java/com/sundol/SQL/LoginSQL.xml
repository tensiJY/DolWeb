<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC 
	"-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 	이 파일은 myBatis에서 사용할 질의 명령을 모아놓을 파일이다.
		
		이 파일을 만드는 규칙
		1.	루트 태그는 <mapper로 시작한다.
		2.	하위 태그는 내리고자하는 명령에 따라서 선택하면 된다.
			만약 SELECT 명령을 기록하고 싶으면		<select>
			만약 UPDATE 명령을 기록하고 싶으면		<update>
			
		3.	그 하위에 필요한 질의 명령을 기록하면 된다.
		
		<mapper 태그는 namespace 속성을 가지게 되는데
		이것의 의미는 다른 SQL 파일과 구분하기 위한 내용을 기록하면 된다.
		고로 이 내용은 같은 프로젝트 안에 있는 다른 xml 과 유니크한 내용으로
		기록해 주면 된다.			
-->	
<mapper namespace="login">
	<!-- 	하나의 질의 명령은 하나의 명령 태그에 기록하면 된다.
			명령 태그는 질의 명령의 종류에 따라 선택하면 된다.
			
			필수 속성		id		여러개의 질의 명령을 구분하기 위한 값으로
									같은 파일 안에는 id 값이 유니끄 해야 한다.
									
									혹시 파일이 다르면 같은 id값을 사용해도 무방하다.
									
			선택 속성		resultType
							==>		질의 실행 결과를 어떤 형태로 받을지를 지정한다.
							parameterType
							==>		질의 실행을 할때 필요한 데이터(? 부분)를 채운 데이터를
									어떤 형태로 제공할지를 지정한다. 

			문제는 이들 속성에 기록한 형태는 풀 클래스 형태로 기록해야 한다.
			예를 들어서	? 에 채울 데이터가 문자열이면.....
			parameterType="String"					은 틀린것이고
			parameterType="java.lang.String"		으로 기록해야 한다.

			이러다보면 이들 형태를 기록하는 것이 매우 번잡하다.
			그래서 myBatis 환경 설정 파일에서 각각의 형태를 줄임말로 기록한 후
			사용하는 방식을 채택했다.
			
			참고	?를 기록한 방법
					myBatis에서는 ?를 직접 사용하지 않고
					대신에		#{적당한말}을 이용해서 기록하게 된다.
					
					적당한 말은 ?를 채울 데이터에 따라서 조금씩 방식이 다르게 제공된다.			
	-->
	<select id="login"		resultType="int"		parameterType="hMap">
		SELECT
			COUNT(*)
		FROM
			Member
		WHERE
					m_ID = #{nick}
			AND	m_PW = #{password}
	</select>
	<!-- 	위의 질의 명령은 원하는 아이디와 비번의 회원이 있으면 1을 알려주고
								회원이 존재하지 않으면 0을 알려주는 방식의 질의 명령이다.
								
			이 질의 명령을 실행하기 위해서는 2개의 데이터를 알려주어야 한다.
			myBatis에서 ?에 데이터를 알려주는 방법
			1.	기본 데이터 형태로 알려주는 방법
				==>		?가 한개일 경우에만 사용하는 방법
			2.	Map 형태로 알려주는 방법
			3.	VO 클래스 형태로 알려주는 방법
				==>		?가 한개 이상인 경우에 사용하는 방법
				
			오늘은 Map 형태로 알려주는 방법을 사용하기로 한다.
	-->
</mapper>






